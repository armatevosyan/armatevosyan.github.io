{"version":3,"sources":["components/Header.jsx","components/Experience.jsx"],"names":["Header","props","title","_jsx","className","children","styles","ulStyle","listStylePosition","paddingLeft","subtitleContainerStyle","marginTop","marginBottom","subtitleStyle","display","inlineChild","itemStyle","margin","padding","width","Experience","theme","useContext","ThemeContext","header","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","fetch","endpoints","experiences","method","then","res","json","catch","err","_jsxs","_Fragment","Container","Timeline","lineColor","timelineLineColor","map","item","console","log","dateText","Fade","TimelineItem","dateInnerStyle","background","accentColor","style","bodyContainerStyle","color","_objectSpread","subtitle","workType","workDescription","point","ReactMarkdown","components","p","FallbackSpinner"],"mappings":"6IAAA,6BAaeA,UATf,SAAgBC,GACd,IAAQC,EAAUD,EAAVC,MACR,OAAOC,cAAA,OAAKC,UAAU,SAAQC,SAAEH,GAClC,C,8JCKMI,EAAS,CACbC,QAAS,CACPC,kBAAmB,UACnBC,YAAa,IAEfC,uBAAwB,CACtBC,UAAW,GACXC,aAAc,IAEhBC,cAAe,CACbC,QAAS,gBAEXC,YAAa,CACXD,QAAS,gBAEXE,UAAW,CACTC,OAAQ,GACRC,QAAS,GACTC,MAAO,UAuFIC,UAnFf,SAAoBnB,GAClB,IAAMoB,EAAQC,qBAAWC,KACjBC,EAAWvB,EAAXuB,OACRC,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAWpB,OATAI,qBAAU,WACRC,MAAMC,IAAUC,YAAa,CAC3BC,OAAQ,QAEPC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACC,GAAG,OAAKP,EAAQO,EAAIH,YAAY,IACtCK,OAAM,SAACC,GAAG,OAAKA,CAAG,GACvB,GAAG,IAGDC,eAAAC,WAAA,CAAArC,SAAA,CACEF,cAACH,UAAM,CAACE,MAAOsB,IAEdK,EAEG1B,cAAA,OAAKC,UAAU,4BAA2BC,SACxCF,cAACwC,IAAS,CAAAtC,SACRF,cAACyC,WAAQ,CACPC,UAAWxB,EAAMyB,kBAAkBzC,SAElCwB,EAAKkB,KAAI,SAACC,GAGT,OAFAC,QAAQC,IAAIF,EAAKG,UAGfhD,cAACiD,IAAI,CAAA/C,SACHoC,eAACY,eAAY,CAEXF,SAAUH,EAAKG,SACfG,eAAgB,CAAEC,WAAYlC,EAAMmC,aACpCC,MAAOnD,EAAOU,UACd0C,mBAAoB,CAAEC,MAAOtC,EAAMsC,OAAQtD,SAAA,CAE3CF,cAAA,MAAIC,UAAU,aAAYC,SACvB2C,EAAK9C,QAERuC,eAAA,OAAKgB,MAAOnD,EAAOI,uBAAuBL,SAAA,CACxCF,cAAA,MAAIsD,MAAKG,wBAAA,GAAOtD,EAAOO,eAAa,IAAE8C,MAAOtC,EAAMmC,cAAcnD,SAC9D2C,EAAKa,WAEPb,EAAKc,UACNrB,eAAA,MAAIgB,MAAOnD,EAAOS,YAAYV,SAAA,CAAC,WAE5B,IACA2C,EAAKc,eAIV3D,cAAA,MAAIsD,MAAOnD,EAAOC,QAAQF,SACvB2C,EAAKe,gBAAgBhB,KAAI,SAACiB,GAAK,OAC9BvB,eAAA,OAAApC,SAAA,CACEF,cAAA,MAAAE,SACEF,cAAC8D,IAAa,CACZ5D,SAAU2D,EACVE,WAAY,CACVC,EAAG,YAIThE,cAAA,WATQ6D,EAUJ,QAjCLhB,EAAK9C,MAAQ8C,EAAKG,WAuC/B,UAIJhD,cAACiE,UAAe,MAG5B,C","file":"static/js/4.2120a742.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../App.css';\r\n\r\nfunction Header(props) {\r\n  const { title } = props;\r\n  return <div className=\"header\">{title}</div>;\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\r\nimport { Container } from 'react-bootstrap';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport Fade from 'react-reveal';\r\nimport Header from './Header';\r\nimport endpoints from '../constants/endpoints';\r\nimport FallbackSpinner from './FallbackSpinner';\r\nimport '../css/experience.css';\r\n\r\nconst styles = {\r\n  ulStyle: {\r\n    listStylePosition: 'outside',\r\n    paddingLeft: 20,\r\n  },\r\n  subtitleContainerStyle: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  subtitleStyle: {\r\n    display: 'inline-block',\r\n  },\r\n  inlineChild: {\r\n    display: 'inline-block',\r\n  },\r\n  itemStyle: {\r\n    margin: 10,\r\n    padding: 10,\r\n    width: '600px',\r\n  },\r\n};\r\n\r\nfunction Experience(props) {\r\n  const theme = useContext(ThemeContext);\r\n  const { header } = props;\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(endpoints.experiences, {\r\n      method: 'GET',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setData(res.experiences))\r\n      .catch((err) => err);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header title={header} />\r\n\r\n      {data\r\n        ? (\r\n          <div className=\"section-content-container\">\r\n            <Container>\r\n              <Timeline\r\n                lineColor={theme.timelineLineColor}\r\n              >\r\n                {data.map((item) => {\r\n                  console.log(item.dateText);\r\n\r\n                  return (\r\n                    <Fade>\r\n                      <TimelineItem\r\n                        key={item.title + item.dateText}\r\n                        dateText={item.dateText}\r\n                        dateInnerStyle={{ background: theme.accentColor }}\r\n                        style={styles.itemStyle}\r\n                        bodyContainerStyle={{ color: theme.color }}\r\n                      >\r\n                        <h2 className=\"item-title\">\r\n                          {item.title}\r\n                        </h2>\r\n                        <div style={styles.subtitleContainerStyle}>\r\n                          <h4 style={{ ...styles.subtitleStyle, color: theme.accentColor }}>\r\n                            {item.subtitle}\r\n                          </h4>\r\n                          {item.workType && (\r\n                          <h5 style={styles.inlineChild}>\r\n                                  &nbsp;Â·\r\n                            {' '}\r\n                            {item.workType}\r\n                          </h5>\r\n                          )}\r\n                        </div>\r\n                        <ul style={styles.ulStyle}>\r\n                          {item.workDescription.map((point) => (\r\n                            <div key={point}>\r\n                              <li>\r\n                                <ReactMarkdown\r\n                                  children={point}\r\n                                  components={{\r\n                                    p: 'span',\r\n                                  }}\r\n                                />\r\n                              </li>\r\n                              <br />\r\n                            </div>\r\n                          ))}\r\n                        </ul>\r\n                      </TimelineItem>\r\n                    </Fade>\r\n                  );\r\n                })}\r\n              </Timeline>\r\n            </Container>\r\n          </div>\r\n        ) : <FallbackSpinner /> }\r\n    </>\r\n  );\r\n}\r\n\r\nExperience.propTypes = {\r\n  header: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Experience;\r\n"],"sourceRoot":""}